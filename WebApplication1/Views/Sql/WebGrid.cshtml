@model IEnumerable<WebApplication1.Models.MyModel>

@{
    ViewBag.Title = "WebGrid";
    var grid = new WebGrid(null,
        defaultSort: ViewBag.sortCol,
        sortFieldName: "sortCol",
        sortDirectionFieldName: "sortDir",
        rowsPerPage: ViewBag.rowsPerPage);

    grid.Bind(Model, rowCount: ViewBag.count, autoSortAndPage: false);

}
<script>
    if(@grid.SortColumn != "ProductID" ){
        document.getElementById("Ordering").innerHTML = "@ViewBag.sortCol  @ViewBag.sortDir ProductID  @ViewBag.sortDir";
    }
    else {
        document.getElementById("Ordering").innerHTML = "@ViewBag.sortCol  @ViewBag.sortDir";
    }

</script>
 

<STYLE type="text/css">
    webgrid {
        border: 1px;
        border-collapse: collapse;

    }
    table, td, th {
        border: 1px solid grey;


    }

    .CategoryName {
        width: 80px;

    }

    .ProductID {
        width: 60px;
        text-align:right;

    }

    .ProductName {
        width: 80px;

    }

    .UnitPrice {
        width: 60px;
        text-align:right;
    }
    .UnitsInStock {
        width: 80px;
        text-align:right;
    }
    .UnitsOnOrder {
        width: 80px;
        text-align:right;
    }
    .CompanyName {
        width: 60px;
    }
    .ContactName {
        width: 60px;
    }
    .Country {
        width: 60px;
    }



</STYLE>

<h2>WebGrid View</h2>

<h3>Missing (useful but not complete checklist)</h3>
<ul>
    
    <li>NEED TO DO Illegal column names and sorting orders are replaced by default values</li>
</ul>

<div>
    @grid.GetHtml(
        tableStyle: "table",
        columns: grid.Columns(
            grid.Column(header: "Product ID " + (grid.SortColumn == "ProductID" ? (grid.SortDirection == SortDirection.Ascending ? "▲" : "▼") : ""), columnName: "ProductID", style: "ProductID"),
            grid.Column(header: "Product Name " + (grid.SortColumn == "ProductName" ? (grid.SortDirection == SortDirection.Ascending ? "▲" : "▼") : ""), columnName: "ProductName", style: "ProductName"),
            grid.Column(header: "Unit Price " + (grid.SortColumn == "UnitPrice" ? (grid.SortDirection == SortDirection.Ascending ? "▲" : "▼") : ""), columnName: "UnitPrice", style: "UnitPrice", format:@<text>@item.UnitPrice.ToString("C")</text>),
            grid.Column(header: "Units In Stock " + (grid.SortColumn == "UnitsInStock" ? (grid.SortDirection == SortDirection.Ascending ? "▲" : "▼") : ""), columnName: "UnitsInStock", style: "UnitsInStock"),
            grid.Column(header: "Units On Order " + (grid.SortColumn == "UnitsOnOrder" ? (grid.SortDirection == SortDirection.Ascending ? "▲" : "▼") : ""), columnName: "UnitsOnOrder", style: "UnitsOnOrder"),
            grid.Column(header: "Category Name " + (grid.SortColumn == "CategoryName" ? (grid.SortDirection == SortDirection.Ascending ? "▲" : "▼") : ""), columnName: "CategoryName", style: "CategoryName"),
            grid.Column(header: "Company Name " + (grid.SortColumn == "CompanyName" ? (grid.SortDirection == SortDirection.Ascending ? "▲" : "▼") : ""), columnName: "CompanyName", style: "CompanyName"),
            grid.Column(header: "Contact Name " + (grid.SortColumn == "ContactName" ? (grid.SortDirection == SortDirection.Ascending ? "▲" : "▼") : ""), columnName: "ContactName", style: "ContactName"),
            grid.Column(header: "Country " + (grid.SortColumn == "Country" ? (grid.SortDirection == SortDirection.Ascending ? "▲" : "▼") : ""), columnName: "Country", style: "Country")


        ),
        mode: WebGridPagerModes.All
    )

    <div >
        <h3>Ordering by:</h3>
        <b id="Ordering">@ViewBag.sortCol  @ViewBag.sortDir ProductID  @ViewBag.sortDir</b>
    </div>
</div>

<hr />

<div style="max-width: 100%;">
    <h4>Request SQL:</h4>
    <textarea id="styled" rows="16" cols="100" style="max-width: 100%;">
        @ViewBag.sql 
    </textarea>
</div>
